<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sales">
	<!-- 상품등록 -->
	<insert id="insertProduct" parameterType="com.sp.app.admin.sales.Sales">
		INSERT INTO CorpProduct(productCode, productName, productInfo, productPrice, salesPrice, registrationDate, categoryNum, memberIdx, statement, imageFileName)
			VALUES (#{productCode}, #{productName}, #{productInfo}, #{productPrice}, #{salesPrice}, SYSDATE, #{categoryNum}, #{memberIdx}, 0, #{imageFileName})
	</insert>

	
	<sql id="search-list">
		<choose>
			<when test="condition == 'all'">
				( INSTR(productName, #{keyword}) &gt; 0
					OR INSTR(productInfo, #{keyword}) &gt; 0 )
			</when>
			<when test="condition == 'productCode'">
				 INSTR(productCode, #{keyword})  &gt; 0
			</when>
			<when test="condition == 'productName'">
				 INSTR(productName, #{keyword})  &gt; 0
			</when>
			<when test="condition == 'registrationDate'">
				 INSTR(TO_CHAR(registrationDate, 'YYYY-MM-DD'), #{keyword}) &gt; 0
			</when>
			<otherwise>
				INSTR(${condition}, #{keyword}) &gt; 0
			</otherwise>
		</choose>
	</sql>
	
		<sql id="orderSearch-list">
		<choose>
			<when test="condition == 'all'">
				( INSTR(productName, #{keyword}) &gt; 0
					OR INSTR(productInfo, #{keyword}) &gt; 0 )
			</when>
			<when test="condition == 'orderNum'">
				 INSTR(orderNum, #{keyword})  &gt; 0
			</when>
			<when test="condition == 'productName'">
				 INSTR(productName, #{keyword})  &gt; 0
			</when>
			<when test="condition == 'registrationDate'">
				 INSTR(TO_CHAR(orderDate, 'YYYY-MM-DD'), #{keyword}) &gt; 0
			</when>
			<otherwise>
				INSTR(${condition}, #{keyword}) &gt; 0
			</otherwise>
		</choose>
	</sql>
	
	<!-- 상품개수  -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM CorpProduct p
		JOIN member m ON m.memberIdx = p.memberIdx
		<where>
			<if test="categoryNum != 0">
				p.categoryNum = #{categoryNum}
			</if>
			<if test="keyword != null and keyword != '' ">
				AND <include refid="search-list"/>
			</if>
		</where>
	</select>
	
	<!-- 상품리스트출력 -->
	<select id="listProduct" parameterType="map" resultType="com.sp.app.admin.sales.Sales">
		SELECT p.productCode, statement, c.categoryName, productName, TO_CHAR(registrationDate, 'YYYY-MM-DD')registrationDate, productPrice, salesPrice, productCount
		FROM CorpProduct p
		JOIN CorpCategory c ON c.categoryNum = p.categoryNum
		<where>
			<if test="categoryNum != 0">
				p.categoryNum = #{categoryNum}
			</if>
			<if test="keyword != null and keyword != ''">
				AND <include refid="search-list"/>
			</if>
		</where>
		ORDER BY registrationDate DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<!-- 상품상세정보 -->
	<select id="readProduct" parameterType="String" resultType="com.sp.app.admin.sales.Sales">
		SELECT p.productCode, productName, productPrice, salesPrice, productCount, registrationDate, c.categoryName, statement, o.productOrderDate
			FROM CorpProduct p
			JOIN CorpCategory c ON c.categoryNum = p.categoryNum
			LEFT OUTER JOIN ProductOrder o ON o.productCode = p.productCode
			WHERE p.productCode = #{productCode}
			ORDER BY o.productOrderDate DESC
			FETCH FIRST 1 ROWS ONLY
	</select>
	
	<!-- 상품 상태변경 정보리스트 -->
	<select id="listProductState" parameterType="String" resultType="com.sp.app.admin.sales.Sales">
		SELECT stateMemo, stateDate, stateCode
		FROM ProductState s
		JOIN CorpProduct p ON p.productCode = s.productCode
		WHERE p.productCode = #{productCode}
		ORDER BY stateNum DESC
		OFFSET 0 ROWS FETCH FIRST 10 ROWS ONLY
	</select>
	
	<!-- 상품상태등록 -->
	<insert id="insertProductState" parameterType="com.sp.app.admin.sales.Sales">
		INSERT INTO ProductState(stateCode, stateNum, stateMemo, productCode, stateDate)
			VALUES (#{stateCode}, ProductState_seq.NEXTVAL, #{stateMemo}, #{productCode}, SYSDATE)
	</insert>
	
	<!-- 상품 상태변경 업데이트-->
	<update id="updateProductState" parameterType="map">
		UPDATE CorpProduct SET statement = #{statement} WHERE productCode = #{productCode}
	</update>
	
	<!-- 상품삭제 -->
	<delete id="deleteProduct" parameterType="String">
		DELETE FROM CorpProduct WHERE productCode = #{productCode}
	</delete>
	
	<!-- 상품발주 -->
	<insert id="insertProductOrder" parameterType="com.sp.app.admin.sales.Sales">
		INSERT INTO ProductOrder(productOrderNum, productOrderMemo, productOrderDate, productOrderCount, productCode)
			VALUES(ProductOrder_seq.NEXTVAL, #{productOrderMemo}, SYSDATE, #{productOrderCount}, #{productCode})
	</insert>
	
	<!-- 상품수량 갱신 -->
	<update id="updateProductCount" parameterType="com.sp.app.admin.sales.Sales">
		UPDATE CorpProduct SET productCount = productCount+#{productOrderCount} WHERE productCode=#{productCode}
	</update>
	
	<!-- 발주기록 리스트 -->
	<select id="listProductOrder" parameterType="String" resultType="com.sp.app.admin.sales.Sales">
		SELECT productOrderMemo, productOrderDate, productOrderCount
		FROM ProductOrder o
		JOIN CorpProduct p ON p.productCode = o.productCode
		WHERE p.productCode = #{productCode}
		ORDER BY productOrderNum DESC
		OFFSET 0 ROWS FETCH FIRST 10 ROWS ONLY
	</select>
	
	<!-- 주문개수 -->
	<select id="dataOrderCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM CorpOrderInfo o
		JOIN member m ON m.memberIdx = o.memberIdx
		<where>
			<if test="keyword != null and keyword != '' ">
				AND <include refid="search-list"/>
			</if>
		</where>
	</select>
	
	<!-- 주문리스트 -->
	<select id="salesOrderList" parameterType="map" resultType="com.sp.app.admin.sales.Sales">
        SELECT o.productCode, o.orderNum, p.productCode, o.orderDate , p.productName, amountPrice, buyCount, o.orderState, o.orderer
		FROM CorpOrderInfo o
		JOIN CorpProduct p ON p.productCode = o.productCode
		<where>
			<if test="productCode != 0">
				o.productCode = #{productCode}
			</if>
			<if test="keyword != null and keyword != ''">
				AND <include refid="orderSearch-list"/>
			</if>
		</where>
		ORDER BY o.orderNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
		<!-- 주문상세정보 -->
	<select id="readOrderInfo" parameterType="Integer" resultType="com.sp.app.admin.sales.Sales">
		SELECT o.orderNum, o.orderDate, p.productCode, o.orderer, p.productName, o.buyCount, o.amountPrice, o.orderAddress, o.orderTel, o.orderState, o.reqMessage
			FROM CorpOrderInfo o
			JOIN CorpProduct p ON p.productCode = o.productCode
			WHERE o.orderNum = #{orderNum}
			ORDER BY o.orderDate DESC
			FETCH FIRST 1 ROWS ONLY
	</select>
	
	<!-- 주문처리등록 -->
	<insert id="insertOrderProcessing" parameterType="com.sp.app.admin.sales.Sales">
		INSERT INTO orderProcessing(orderCode, p_num, orderSendDate, o_memo, orderNum)
			VALUES (#{orderCode}, orderProcessing_seq.NEXTVAL, SYSDATE, #{o_memo}, #{orderNum})
	</insert>
	
	<!-- 상품 상태변경 업데이트-->
	<update id="updateOrderProcessing" parameterType="map">
		UPDATE CorpOrderInfo SET orderState = #{orderState} WHERE orderNum = #{orderNum}
	</update>
	
	<!-- 주문상세정보 리스트 -->
	<select id="orderProcessingList" parameterType="Integer" resultType="com.sp.app.admin.sales.Sales">
		SELECT p_num, orderSendDate, o_memo, orderCode
		FROM orderProcessing p
		JOIN CorpOrderInfo o ON o.orderNum = p.orderNum
		WHERE p.orderNum = #{orderNum}
		ORDER BY p_num DESC
		OFFSET 0 ROWS FETCH FIRST 10 ROWS ONLY
	</select>
	
	<!-- 차트리스트 -->
	<select id="salesChartList" resultType="com.sp.app.admin.sales.Sales">
	
	</select>
	
</mapper>