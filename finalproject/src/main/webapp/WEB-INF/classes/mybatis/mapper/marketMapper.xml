<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="market">
	
	<!-- 검색조건 -->
	<sql id="search-list">
		<choose>
			<when test="condition == 'all'">
				( INSTR(productName, #{keyword}) &gt; 0
					OR INSTR(productInfo, #{keyword}) &gt; 0 )
			</when>
			<otherwise>
				INSTR(${condition}, #{keyword}) &gt; 0
			</otherwise>
		</choose>
	</sql>
	
	<!-- 데이터갯수 -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM CorpProduct p
		JOIN member m ON m.memberIdx = p.memberIdx
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="search-list"/>
			</if>
		</where>
	</select>
	
	<!-- 판매상품 리스트 -->
	<select id="listSales" parameterType="map" resultType="com.sp.app.market.Market">
		SELECT p.productCode, productName, imageFileName, salesPrice, registrationDate, statement, productCount
		FROM CorpProduct p
		JOIN member m ON m.memberIdx = p.memberIdx
		<where>
			<if test="keyword != null and keyword != ''">
				<include refid="search-list"/>
			</if>
		</where>
		ORDER BY registrationDate DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<!-- 판매글 보기 -->
	<select id="readSales" parameterType="String" resultType="com.sp.app.market.Market">
		SELECT p.productCode, imageFileName, productName, salesPrice, productCount, productInfo
		FROM CorpProduct p
		JOIN member m ON m.memberIdx = p.memberIdx
		WHERE p.productCode = #{productCode}
	</select>
	
	<!-- 주문입력페이지 주문정보 넘기는 용도 -->
	<select id="readOrder" parameterType="String" resultType="com.sp.app.market.Market">
		SELECT imageFileName, productName, p.productCode, salesPrice
		FROM CorpProduct p
		JOIN member m ON m.memberIdx = p.memberIdx
		WHERE p.productCode = #{productCode}
	</select>
	
	<!-- 주문  -->
	<insert id="insertProductOrder" parameterType="com.sp.app.market.Market">
		INSERT INTO CorpOrderInfo(orderNum, productCode, memberIdx, orderer, orderState, zip, orderAddress, orderTel, orderDate, amountPrice, reqMessage, buyCount)
			VALUES(ProductOrder_seq.NEXTVAL, #{productCode}, #{memberIdx}, #{orderer}, 0, #{zip}, #{orderAddress}, #{orderTel}, SYSDATE, #{amountPrice}, #{reqMessage}, #{buyCount})
	</insert>
	
	<!-- 주문에 의한 재고 수량 갱신  -->
	<update id="productCountUpdate" parameterType="map">
		UPDATE CorpProduct SET productCount = productCount-#{buyCount} WHERE productCode = #{productCode}
	</update>
</mapper>