<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="buy">

	<!-- 페이징 처리용-재료 -->
	<select id="dataCount_mat" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM product p
		JOIN seller s ON p.userId = s.userId
		WHERE division=0
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
		</where> 
	</select>
	
	<!-- 페이징 처리용-예약 -->
	<select id="dataCount_rsv" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM product p
		JOIN seller s ON p.userId = s.userId
		WHERE division=2
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
		</where> 
	</select>
	
	<!-- 페이징 처리용-완제 -->
	<select id="dataCount_complete" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM product p
		JOIN seller s ON p.userId = s.userId
		WHERE division=1
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
		</where> 
	</select>
	
	<sql id="where-list">
		<choose>
			<when test="condition == 'all' ">
			   ( INSTR(productName, #{keyword}) &gt; 0
		          OR DBMS_LOB.INSTR(content, #{keyword}) &gt; 0 )
			</when>
			<when test="condition == 'content'">
			    DBMS_LOB.INSTR(content, #{keyword}) &gt; 0
			</when>
			<otherwise>
			    INSTR(${condition}, #{keyword}) &gt; 0
			</otherwise>
		</choose>
	</sql>

	<!-- 상품 리스트 읽기-재료 -->
	<select id="listProduct_mat" parameterType="map" resultType="com.sp.app.buy.Product">
		SELECT productNum, p.userId, productName, price, s.userName, c.categoryNum, c.categoryName,
            TO_CHAR(created_date, 'YYYY-MM-DD') created_date, imageFileName, stock
		FROM product p
		JOIN seller s ON p.userId=s.userId
		JOIN category c ON p.categoryNum=c.categoryNum
		WHERE division=0
			<if test="keyword != null and keyword != ''">
				AND<include refid="where-list"/>
			</if>
		ORDER BY productNum DESC
		OFFSET ${offset} ROWS FETCH FIRST#{rows} ROWS ONLY
	</select>
	
		<!-- 상품 리스트 읽기-예약 -->
	<select id="listProduct_rsv" parameterType="map" resultType="com.sp.app.buy.Product">
		SELECT productNum, p.userId, productName, price, s.userName, c.categoryNum, c.categoryName,
            TO_CHAR(created_date, 'YYYY-MM-DD') created_date, imageFileName, stock
		FROM product p
		JOIN seller s ON p.userId=s.userId
		JOIN category c ON p.categoryNum=c.categoryNum
		WHERE division=2
			<if test="keyword != null and keyword != ''">
				AND<include refid="where-list"/>
			</if>
		ORDER BY productNum DESC
		OFFSET ${offset} ROWS FETCH FIRST#{rows} ROWS ONLY
	</select>
	
			<!-- 상품 리스트 읽기-완제 -->
	<select id="listProduct_complete" parameterType="map" resultType="com.sp.app.buy.Product">
		SELECT productNum, p.userId, productName, price, s.userName, c.categoryNum, c.categoryName,
            TO_CHAR(created_date, 'YYYY-MM-DD') created_date, imageFileName, stock
		FROM product p
		JOIN seller s ON p.userId=s.userId
		JOIN category c ON p.categoryNum=c.categoryNum
		WHERE division=1
			<if test="keyword != null and keyword != ''">
				AND<include refid="where-list"/>
			</if>
		ORDER BY productNum DESC
		OFFSET ${offset} ROWS FETCH FIRST#{rows} ROWS ONLY
	</select>
	
	<!-- 상품 상세설명 확인 -->
	<select id="readProduct" parameterType="Integer" resultType="com.sp.app.buy.Product">
		SELECT productNum, p.userId, s.userName, productName, price, content, reserves, division,
			TO_CHAR(created_date, 'YYYY-MM-DD') created_date, imageFileName, categoryNum, countDate
		FROM product p
		JOIN seller s ON p.userId=s.userId
		WHERE productNum=#{productNum}
	</select>
	
	<insert id="insertCart" parameterType="com.sp.app.buy.Cart">
		INSERT INTO cart(cId, userId, productNum, count,
			cName, cPrice, seller, get_date, reserves) VALUES
			(cart_seq.NEXTVAL, #{userId}, #{productNum}, #{count}, #{cName}, #{cPrice}, #{seller}, SYSDATE, #{reserves})
	</insert>
	
	<select id="listCart" parameterType="map" resultType="com.sp.app.buy.Cart">
		SELECT cId, c.userId, c.productNum, count, cName, p.imageFilename, p.stock,
				cPrice, seller, TO_CHAR(get_date, 'YYYY-MM-DD') get_date, c.reserves
		FROM cart c
		JOIN product p ON c.productNum=p.productNum
		WHERE c.userId=#{userId}
		ORDER BY get_date DESC
	</select>
	
	<delete id="deleteCart" parameterType="Integer">
		DELETE FROM cart WHERE cId = #{cId}
	</delete>
	
	<delete id="deleteCartlist" parameterType="java.util.List">
		DELETE FROM cart
		WHERE cId IN
		<foreach collection="list" item="cId" index="index" open="(" separator="," close=")">
      	#{cId}
     	 </foreach>
	</delete>
	
	<select id="seq" resultType="Integer">
		SELECT orderinfo_seq.NEXTVAL FROM dual
	</select>
	
	<!-- 주문 -->
	<insert id="insertOrderinfo" parameterType="com.sp.app.buy.Orderinfo">
		INSERT INTO orderinfo(orderId, memberIdx, total_price, order_state,
		 		order_date, Addr1, Addr2, reserves) VALUES
		 		(#{orderId}, #{memberIdx}, #{total_price}, #{order_state},
		 		SYSDATE, #{Addr1, jdbcType=VARCHAR}, #{Addr2, jdbcType=VARCHAR}, #{reserves})
	</insert>
	
	<!-- 주문 항목 기입 -->
	<insert id="insertOrder_detail" parameterType="com.sp.app.buy.Orderinfo">
		INSERT INTO order_detail(orderId_detail, count,
				productName, price, productNum, orderId) VALUES
				(order_detail_seq.NEXTVAL, #{count}, #{productName},
					#{price}, #{productNum}, #{orderId}
				)
	</insert>
	
	
	<!-- 주문 항목 조회 -->
	<select id="listOrderinfo" parameterType="map" resultType="com.sp.app.buy.Orderinfo">
		SELECT orderId, memberIdx, total_price, order_state,
				 TO_CHAR(order_date, 'YYYY-MM-DD') order_date, Addr1, Addr2,
				 reserves
		FROM orderinfo
		WHERE memberIdx=#{memberIdx}
		ORDER BY order_date DESC
	</select>
	
	<!-- 주문 항목 상세 조회 -->
	<select id="listOrder_detail" parameterType="map" resultType="com.sp.app.buy.Orderinfo">
		SELECT orderId_detail, count, productName, price, orderId
		FROM orderinfo
		WHERE orderId=#{orderId}
	</select>
	
	
	<insert id="insertdelivery" parameterType="com.sp.app.buy.Orderinfo">
		INSERT INTO delivery(orderId, Addr1, Addr2, zip,
				 customer, tel, othertel, content) VALUES
				 (#{orderId}, #{Addr1, jdbcType=VARCHAR}
				 , #{Addr2, jdbcType=VARCHAR}, #{zip, jdbcType=VARCHAR}
				 , #{customer}, #{tel}, #{othertel, jdbcType=VARCHAR}, #{content, jdbcType=VARCHAR})
		</insert>
	
	
	<select id="listCartBuy" parameterType="map" resultType="com.sp.app.buy.Cart">
		SELECT cId, userId, c.productNum, count, cPrice, cName, get_date
		FROM cart c
		WHERE cId IN
		<foreach collection="list" item="cId" index="index" open="(" separator="," close=")">
		   #{cId}
		</foreach>
		ORDER BY get_date DESC
	</select>
		
</mapper>